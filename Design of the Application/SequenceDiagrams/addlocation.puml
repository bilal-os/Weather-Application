@startuml
title AddLocation Scenario
autonumber
actor User
participant TerminalInterface
participant LocationManager
participant GeoCoding
participant DataManager
participant CacheManager
participant WeatherService

scale 2
User -> TerminalInterface: addLocation()
activate User
TerminalInterface --> User: Enter Location
activate TerminalInterface
User -> TerminalInterface: location

TerminalInterface -> TerminalInterface: findStoredLocation(location)

alt locationNotExist

loop until validEntry

    alt locationIsCity
        TerminalInterface -> LocationManager: convertToCoordinates()
        activate LocationManager
        LocationManager -> GeoCoding: directGeoCoding(location: string)
        activate GeoCoding
        GeoCoding --> LocationManager: locationDetails
        deactivate GeoCoding
       
        alt errorFetching
             LocationManager -> TerminalInterface: "Error: Invalid location"
             TerminalInterface -> User: "Enter Location Again"
             
        else

        LocationManager -> CacheManager: storeLocation(locationDetails)
        activate CacheManager
        CacheManager --> LocationManager: "Location Stored"
        deactivate CacheManager     

        LocationManager -> LocationManager: extractCoordiantes()
        LocationManager --> TerminalInterface: coordinates
        deactivate LocationManager
        
        end

    else locationIsCoordinates
        TerminalInterface -> LocationManager: verifyCoordinates(latitude,longitude)
        activate LocationManager
        LocationManager -> GeoCoding: reverseGeoCoding(latitude,longitude)
        activate GeoCoding
        GeoCoding --> LocationManager: locationDetails
        deactivate GeoCoding
        
        alt errorFetching
             LocationManager -> TerminalInterface: "Error: Invalid location"
             TerminalInterface -> User: "Enter Location Again"
             
        else        

        LocationManager -> CacheManager: storeLocation(locationDetails)
        activate CacheManager
        CacheManager --> LocationManager: "Location Stored"
        deactivate CacheManager

        LocationManager -> LocationManager: extractCoordiantes()
        deactivate GeoCoding
        LocationManager --> TerminalInterface: coordinates
        deactivate LocationManager

        end    
            
    end

end



TerminalInterface -> LocationManager: addLocation(latitude,longitude)
activate LocationManager
LocationManager -> DataManager: fetchWeatherReport(latitude,longitude)
activate DataManager
DataManager -> WeatherService: fetchWeatherReport(latitude,longitude)
activate WeatherService
WeatherService -> DataManager: WeatherReport
deactivate WeatherService
DataManager -> CacheManager: storeWeatherReport(latitude,longitude,WeatherReport)
activate CacheManager
CacheManager -> DataManager: "data stored"
deactivate CacheManager
DataManager -> LocationManager: WeatherReport
deactivate DataManager

deactivate CacheManager
LocationManager -> DataManager: fetchAirData(latitude,longitude)
activate DataManager
DataManager -> WeatherService: fetchAirData(latitude,longitude)
activate WeatherService
WeatherService -> DataManager: airData
deactivate WeatherService
DataManager -> CacheManager: storeairData(latitude,longitude,WeatherReport)
activate CacheManager
CacheManager -> DataManager: "data stored"
deactivate CacheManager
DataManager -> LocationManager: airData
deactivate DataManager

deactivate CacheManager
LocationManager -> DataManager: fetchForecast(latitude,longitude)
activate DataManager
DataManager -> WeatherService: fetchForecast(latitude,longitude)
activate WeatherService
WeatherService -> DataManager: ForecastReport
deactivate WeatherService
DataManager -> CacheManager: storeForecast(latitude,longitude,forecastReport)
activate CacheManager
CacheManager -> DataManager: "data stored"
deactivate CacheManager
DataManager -> LocationManager: ForecastReport
deactivate DataManager



else LocationExists
TerminalInterface --> User: "Location Already Exists"

end